import{a as t}from"./vendor-utils-CTzFqUk0.js";import{aq as e}from"./vendor-others-aeGeD6f-.js";import{c as i}from"./component-exhibition-CuwlJtEU.js";const r="/api",a=t.create({baseURL:r,headers:{"Content-Type":"application/json",Accept:"application/json"}}),o=t.create({baseURL:r,headers:{"Content-Type":"application/json",Accept:"application/json"}}),s=t.create({baseURL:r,headers:{"Content-Type":"application/json",Accept:"application/json"}});a.interceptors.request.use((t=>{var e,i,r,a,o,s,n,c,h;const u=localStorage.getItem("token"),l=localStorage.getItem("exhibitor_token"),d=(null==(e=t.url)?void 0:e.startsWith("/bookings/"))&&"patch"===t.method||(null==(i=t.url)?void 0:i.includes("/exhibition/"))||(null==(r=t.url)?void 0:r.includes("/stalls/"))||(null==(a=t.url)?void 0:a.includes("/halls/"))||(null==(o=t.url)?void 0:o.includes("/users/"))||(null==(s=t.url)?void 0:s.includes("/roles/")),b=(null==(n=t.url)?void 0:n.includes("/test-booking"))||(null==(c=t.url)?void 0:c.includes("/exhibitor-bookings"))||(null==(h=t.url)?void 0:h.startsWith("/exhibitors/"));return d?u&&(t.headers.Authorization=`Bearer ${u}`):b&&l?t.headers.Authorization=`Bearer ${l}`:u?t.headers.Authorization=`Bearer ${u}`:l&&(t.headers.Authorization=`Bearer ${l}`),t}),(t=>Promise.reject(t))),s.interceptors.request.use((t=>{const e=localStorage.getItem("exhibitor_token");return e&&(t.headers.Authorization=`Bearer ${e}`),t}),(t=>Promise.reject(t))),a.interceptors.response.use((t=>t),(t=>{var e,i,r;401===(null==(e=t.response)?void 0:e.status)&&localStorage.removeItem("token");const a=(null==(r=null==(i=t.response)?void 0:i.data)?void 0:r.message)||t.message;return Promise.reject(new Error(a))})),s.interceptors.response.use((t=>t),(t=>{var e,i,r;401===(null==(e=t.response)?void 0:e.status)&&localStorage.removeItem("exhibitor_token");const a=(null==(r=null==(i=t.response)?void 0:i.data)?void 0:r.message)||t.message;return Promise.reject(new Error(a))}));const n=async(e,i=!1,a)=>{const o=i?localStorage.getItem("exhibitor_token"):localStorage.getItem("token");return t.get(`${r}${e}`,{responseType:"blob",headers:{Authorization:`Bearer ${o}`},onDownloadProgress:a})},c=Object.freeze(Object.defineProperty({__proto__:null,default:a,downloadFile:n,exhibitorApi:s,publicApi:o},Symbol.toStringTag,{value:"Module"})),h={login:async t=>await a.post("/auth/login",t),getProfile:async()=>await a.get("/auth/me"),changePassword:async t=>await a.post("/auth/change-password",t)};const u=new class{constructor(){this.socket=null,this.subscribedToNotifications=!1,this.reconnectTimer=null,this.listeners={},this.unreadCount=0,this.isExhibitor=!1,this.lastToken="",this.handleConnect=()=>{setTimeout((()=>{this.subscribedToNotifications&&this.socket&&this.socket.emit("subscribe_notifications"),this.fetchUnreadCount(),this.triggerEvent("connected",!0)}),500)},this.handleDisconnect=t=>{this.triggerEvent("disconnected",t),"io client disconnect"!==t&&"transport close"!==t&&this.scheduleReconnect()},this.handleConnectError=t=>{this.scheduleReconnect()},this.handleError=t=>{this.scheduleReconnect()},this.scheduleReconnect=()=>{this.reconnectTimer||(this.reconnectTimer=setTimeout((()=>{this.refreshAndReconnect(),this.reconnectTimer=null}),5e3))},this.refreshAndReconnect=async()=>{try{const t=this.isExhibitor?"exhibitor_token":"token",e=localStorage.getItem(t);e&&this.init(e,this.isExhibitor)}catch(t){}},this.handleNewNotification=t=>{this.unreadCount=t.unreadCount,this.triggerEvent("notification",t.notification),this.triggerEvent("unreadCount",this.unreadCount)},this.handleNotificationUpdate=t=>{this.unreadCount=t.unreadCount,this.triggerEvent("unreadCount",this.unreadCount),t.newNotifications&&t.newNotifications.length>0&&t.newNotifications.forEach((t=>{this.triggerEvent("notification",t)}))}}init(t,r=!1){var a;if(!(null==(a=this.socket)?void 0:a.connected)||this.lastToken!==t||this.isExhibitor!==r){this.isExhibitor=r,this.lastToken=t,this.socket&&(this.socket.disconnect(),this.socket=null),this.reconnectTimer&&(clearTimeout(this.reconnectTimer),this.reconnectTimer=null);try{if(!t||"string"!=typeof t)throw new Error("Invalid token provided for socket connection");const a=i.replace("/api",""),o=t.startsWith("Bearer ")?t.substring(7):t;this.socket=e(a,{auth:{token:o,type:r?"exhibitor":"admin"},forceNew:!0,reconnection:!0,reconnectionAttempts:5,reconnectionDelay:3e3,timeout:2e4,autoConnect:!0,transports:["polling","websocket"]}),this.socket.on("connect",this.handleConnect),this.socket.on("disconnect",this.handleDisconnect),this.socket.on("connect_error",this.handleConnectError),this.socket.on("error",this.handleError),this.socket.on("new_notification",this.handleNewNotification),this.socket.on("notification_update",this.handleNotificationUpdate)}catch(o){this.scheduleReconnect()}}}subscribeToNotifications(){this.subscribedToNotifications=!0,this.socket&&this.socket.connected&&this.socket.emit("subscribe_notifications")}unsubscribeFromNotifications(){this.subscribedToNotifications=!1,this.socket&&this.socket.connected&&this.socket.emit("unsubscribe_notifications")}disconnect(){this.socket&&(this.socket.disconnect(),this.socket=null),this.reconnectTimer&&(clearTimeout(this.reconnectTimer),this.reconnectTimer=null),this.unreadCount=0,this.subscribedToNotifications=!1}addEventListener(t,e){this.listeners[t]||(this.listeners[t]=[]),this.listeners[t].push(e)}removeEventListener(t,e){this.listeners[t]&&(this.listeners[t]=this.listeners[t].filter((t=>t!==e)))}triggerEvent(t,e){this.listeners[t]&&this.listeners[t].forEach((t=>{try{t(e)}catch(i){}}))}getUnreadCount(){return this.unreadCount}async fetchUnreadCount(){try{const e=this.isExhibitor?"notifications/exhibitor":"notifications/admin",r={limit:1,page:1,unreadOnly:!0},a=this.isExhibitor?"exhibitor_token":"token",o=localStorage.getItem(a);if(!o)return 0;const s=await t.get(e,{baseURL:i,params:r,headers:{Authorization:`Bearer ${o}`}});return s.data&&s.data.success?(this.unreadCount=s.data.data.unreadCount,this.triggerEvent("unreadCount",this.unreadCount),this.unreadCount):0}catch(e){return 0}}async getNotifications(e=1,r=10,a=!1){try{const o=this.isExhibitor?"notifications/exhibitor":"notifications/admin",s={page:e,limit:r,unreadOnly:a},n=this.isExhibitor?"exhibitor_token":"token",c=localStorage.getItem(n);if(!c)throw new Error(`No ${this.isExhibitor?"exhibitor":"admin"} token available for notification requests`);return(await t.get(o,{baseURL:i,params:s,headers:{Authorization:`Bearer ${c}`}})).data}catch(o){return{success:!1,data:{notifications:[],pagination:{total:0,page:1,limit:10,pages:0},unreadCount:0}}}}async markAsRead(e){try{const r=this.isExhibitor?`notifications/exhibitor/mark-read/${e}`:`notifications/admin/mark-read/${e}`,a=this.isExhibitor?"exhibitor_token":"token",o=localStorage.getItem(a);if(!o)throw new Error(`No ${this.isExhibitor?"exhibitor":"admin"} token available for notification requests`);const s=await t.put(r,{},{baseURL:i,headers:{Authorization:`Bearer ${o}`}});return s.data&&s.data.success&&(this.unreadCount=s.data.data.unreadCount,this.triggerEvent("unreadCount",this.unreadCount)),s.data}catch(r){throw r}}async markAllAsRead(){try{const e=this.isExhibitor?"notifications/exhibitor/mark-all-read":"notifications/admin/mark-all-read",r=this.isExhibitor?"exhibitor_token":"token",a=localStorage.getItem(r);if(!a)throw new Error(`No ${this.isExhibitor?"exhibitor":"admin"} token available for notification requests`);const o=await t.put(e,{},{baseURL:i,headers:{Authorization:`Bearer ${a}`}});return o.data&&o.data.success&&(this.unreadCount=0,this.triggerEvent("unreadCount",this.unreadCount)),o.data}catch(e){throw e}}async deleteNotification(e){try{const r=this.isExhibitor?`notifications/exhibitor/${e}`:`notifications/admin/${e}`,a=await t.delete(r,{baseURL:i,headers:{Authorization:`Bearer ${localStorage.getItem(this.isExhibitor?"exhibitor_token":"token")}`}});if(a.data.success)return void 0!==a.data.data.unreadCount&&(this.unreadCount=a.data.data.unreadCount,this.triggerEvent("unreadCount",this.unreadCount)),a.data;throw new Error("Failed to delete notification")}catch(r){throw r}}async deleteAllNotifications(){try{const e=this.isExhibitor?"notifications/exhibitor/delete-all":"notifications/admin/delete-all",r=await t.delete(e,{baseURL:i,headers:{Authorization:`Bearer ${localStorage.getItem(this.isExhibitor?"exhibitor_token":"token")}`}});if(r.data.success)return this.unreadCount=0,this.triggerEvent("unreadCount",this.unreadCount),r.data;throw new Error("Failed to delete all notifications")}catch(e){throw e}}};const l=new class{async getSettings(){return(await a.get("/settings")).data}async updateSettings(t){return(await a.put("/settings",t)).data}async uploadLogo(t){const e=new FormData;e.append("file",t);return(await a.post("/settings/upload/logo",e,{headers:{"Content-Type":"multipart/form-data"}})).data}},d=t.create({baseURL:i}),b=t.create({baseURL:i});d.interceptors.request.use((t=>{const e=localStorage.getItem("exhibitor_token");return e&&(t.headers.Authorization=`Bearer ${e}`),t}),(t=>Promise.reject(t)));const g=t.create({baseURL:i});g.interceptors.request.use((t=>{const e=localStorage.getItem("token");return e&&(t.headers.Authorization=`Bearer ${e}`),t}),(t=>Promise.reject(t)));const p={sendRegistrationOTP:async t=>await b.post("/exhibitors/send-otp",{email:t}),verifyOTP:async t=>await b.post("/exhibitors/verify-otp",t),register:async t=>await b.post("/exhibitors/register",t),login:async t=>await b.post("/exhibitors/login",t),requestPasswordReset:async t=>await b.post("/exhibitors/forgot-password",t),resetPassword:async t=>await b.post("/exhibitors/reset-password",t),getProfile:async()=>await d.get("/exhibitors/profile"),updateProfile:async t=>await d.put("/exhibitors/profile",t),getExhibitors:async()=>await g.get("/exhibitors/admin/exhibitors"),getExhibitor:async t=>await g.get(`/exhibitors/admin/exhibitors/${t}`),createExhibitor:async t=>await g.post("/exhibitors/admin/exhibitors",t),updateStatus:async(t,e,i)=>await g.put(`/exhibitors/admin/exhibitors/${t}/status`,{status:e,rejectionReason:i}),updateExhibitor:async(t,e)=>await g.put(`/exhibitors/admin/exhibitors/${t}`,e),deleteExhibitor:async t=>await g.delete(`/exhibitors/admin/exhibitors/${t}`)},w={getExhibitions:()=>o.get("/public/exhibitions"),getExhibition:t=>o.get(`/public/exhibitions/${t}`),getLayout:t=>o.get(`/public/exhibitions/${t}/layout`),getStallDetails:(t,e)=>o.get(`/public/exhibitions/${t}/stalls/${e}`),bookStall:(t,e,i)=>o.post(`/public/exhibitions/${t}/stalls/${e}/book`,i),bookMultipleStalls:(t,e)=>o.post(`/public/exhibitions/${t}/stalls/book-multiple`,e),searchExhibitors:t=>o.get("/public/exhibitors/search",{params:{query:t}}),exhibitorBookStalls:t=>a.post(`/exhibitor-bookings/${t.exhibitionId}`,t),getExhibitorBookings:()=>a.get("/exhibitor-bookings/my-bookings"),getExhibitorBooking:t=>a.get(`/exhibitor-bookings/${t}`),cancelExhibitorBooking:t=>a.patch(`/exhibitor-bookings/${t}/cancel`),getExhibitorBookingInvoice:t=>a.get(`/exhibitor-bookings/${t}/invoice`)},y=t=>{var e,i;const r=(null==(i=null==(e=t.response)?void 0:e.data)?void 0:i.message)||"An error occurred";throw new Error(r)},x={getExhibitions:async()=>{try{return await a.get("/exhibitions")}catch(t){return y(t)}},getActiveExhibitions:async()=>{try{return await a.get("/exhibitions/active")}catch(t){return y(t)}},getExhibition:async t=>{try{return await a.get(`/exhibitions/${t}`)}catch(e){return y(e)}},createExhibition:async t=>{try{return await a.post("/exhibitions",t)}catch(e){return y(e)}},updateExhibition:async(t,e)=>{try{return await a.put(`/exhibitions/${t}`,e)}catch(i){return y(i)}},deleteExhibition:async t=>{try{return await a.delete(`/exhibitions/${t}`)}catch(e){return y(e)}},getHalls:async t=>{try{return await a.get(`/exhibitions/${t}/halls`)}catch(e){return y(e)}},createHall:async(t,e)=>{try{const{_id:i,id:r,createdAt:o,updatedAt:s,...n}=e;return(await a.post(`/exhibitions/${t}/halls`,n)).data}catch(i){throw i}},updateHall:async(t,e,i)=>{try{const{_id:r,id:o,createdAt:s,updatedAt:n,...c}=i;return await a.put(`/exhibitions/${t}/halls/${e}`,c)}catch(r){return y(r)}},deleteHall:async(t,e)=>{var i,r,o;try{if(!t||!e)throw new Error("Exhibition ID and Hall ID are required");const i=await a.delete(`/exhibitions/${t}/halls/${e}`);if(!i.data)throw new Error("No response received from server");return i}catch(s){if(401===(null==(i=s.response)?void 0:i.status))throw new Error("Unauthorized. Please log in again.");if(403===(null==(r=s.response)?void 0:r.status))throw new Error("You do not have permission to delete halls.");if(404===(null==(o=s.response)?void 0:o.status))throw new Error("Hall not found.");throw s}},saveLayout:async(t,e)=>{try{if(!t)throw new Error("Exhibition ID is required");return{data:{halls:e}}}catch(i){return y(i)}},getLayout:async t=>{try{if(!t)throw new Error("Exhibition ID is required");return await a.get(`/exhibitions/${t}/layout`)}catch(e){return y(e)}},getStalls:async(t,e)=>{try{if(!t)throw new Error("Exhibition ID is required");return await a.get(`/exhibitions/${t}/stalls`,{params:{hallId:e}})}catch(i){return y(i)}},createStall:async(t,e)=>{try{if(!t)throw new Error("Exhibition ID is required");return await a.post(`/exhibitions/${t}/stalls`,e)}catch(i){return y(i)}},updateStall:async(t,e,i)=>{try{if(!t||!e)throw new Error("Exhibition ID and Stall ID are required");return await a.put(`/exhibitions/${t}/stalls/${e}`,i)}catch(r){return y(r)}},deleteStall:async(t,e)=>{try{if(!t||!e)throw new Error("Exhibition ID and Stall ID are required");return await a.delete(`/exhibitions/${t}/stalls/${e}`)}catch(i){return y(i)}},getFixtures:async(t,e)=>{try{const i=`/exhibitions/${t}/fixtures`,r=e?{type:e}:void 0;return await a.get(i,{params:r})}catch(i){return y(i)}},getFixture:async(t,e)=>{try{return await a.get(`/exhibitions/${t}/fixtures/${e}`)}catch(i){return y(i)}},createFixture:async(t,e)=>{try{return await a.post(`/exhibitions/${t}/fixtures`,e)}catch(i){return y(i)}},updateFixture:async(t,e,i)=>{try{return await a.put(`/exhibitions/${t}/fixtures/${e}`,i)}catch(r){return y(r)}},deleteFixture:async(t,e)=>{try{return await a.delete(`/exhibitions/${t}/fixtures/${e}`)}catch(i){return y(i)}}},m=async()=>{try{return(await a.get("/roles")).data}catch(t){throw t}},f=async t=>{try{return(await a.get(`/roles/${t}`)).data}catch(e){throw e}},k=async t=>{try{return(await a.post("/roles",t)).data}catch(e){throw e}},E=async(t,e)=>{try{return(await a.put(`/roles/${t}`,e)).data}catch(i){throw i}},$=async t=>{try{await a.delete(`/roles/${t}`)}catch(e){throw e}},v=async()=>{try{return(await a.get("/users")).data}catch(t){throw t}},C=async t=>{try{return(await a.get(`/users/${t}`)).data}catch(e){throw e}},T=async t=>{try{return(await a.post("/users",t)).data}catch(e){throw e}},S=async(t,e)=>{try{return(await a.put(`/users/${t}`,e)).data}catch(i){throw i}},A=async t=>{try{await a.delete(`/users/${t}`)}catch(e){throw e}},I={getDashboardStats:async()=>{var t;try{const e=(await a.get("/users")).data||[],i=await a.get("/bookings"),r=(null==(t=i.data)?void 0:t.data)||i.data||[],o=(await a.get("/exhibitions")).data||[],s=r.filter((t=>"confirmed"===t.status||"approved"===t.status)).reduce(((t,e)=>t+(e.amount||0)),0),n=[...r].sort(((t,e)=>new Date(e.createdAt).getTime()-new Date(t.createdAt).getTime())).slice(0,5),c=[...e].sort(((t,e)=>new Date(e.createdAt||0).getTime()-new Date(t.createdAt||0).getTime())).slice(0,5);return{userCount:e.length,bookingCount:r.length,totalRevenue:s,exhibitionCount:o.length,recentBookings:n,recentUsers:c}}catch(e){return{userCount:0,bookingCount:0,totalRevenue:0,exhibitionCount:0,recentBookings:[],recentUsers:[]}}},getRecentActivity:async()=>{try{const{recentBookings:t,recentUsers:e}=await I.getDashboardStats();return[...t.map((t=>({id:t._id,type:"booking",title:`New booking ${t._id.substring(0,8)}`,timestamp:t.createdAt,data:t}))),...e.map((t=>({id:t._id,type:"user",title:`User ${t.username||"unknown"}`,timestamp:t.createdAt,data:t})))].sort(((t,e)=>new Date(e.timestamp).getTime()-new Date(t.timestamp).getTime()))}catch(t){return[]}}},_={getStallTypes:async()=>a.get("/stall-types"),createStallType:async t=>a.post("/stall-types",t),updateStallType:async(t,e)=>a.put(`/stall-types/${t}`,e),deleteStallType:async t=>a.delete(`/stall-types/${t}`)},R=Object.freeze(Object.defineProperty({__proto__:null,default:_},Symbol.toStringTag,{value:"Module"})),N=t=>{if(!t)return"";const e=window.location.origin,i=t.replace(/^\/?(api\/uploads\/)?/,"");if(i.includes("fixtures/"))return`${e}/api/uploads/${i}`;const r=localStorage.getItem("token");return r?`${e}/api/uploads/${i}?token=${r}`:""};export{a,h as b,x as c,I as d,p as e,n as f,N as g,l as h,m as i,k as j,$ as k,f as l,v as m,u as n,C as o,w as p,T as q,S as r,_ as s,A as t,E as u,c as v,R as w};
