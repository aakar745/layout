import { 
  Notification, 
  NotificationType, 
  NotificationPriority, 
  NotificationStatus, 
  NotificationSource 
} from './types';

// Generate mock notifications data
export const getNotifications = (): Notification[] => {
  return [
    {
      id: '1',
      userId: '1',
      type: NotificationType.NEW_LEAD,
      title: 'New Lead from Facebook',
      message: 'John Smith has inquired about Tourist visa',
      source: NotificationSource.FACEBOOK,
      priority: NotificationPriority.HIGH,
      status: NotificationStatus.UNREAD,
      entityId: '101',
      entityType: 'lead',
      createdAt: new Date(new Date().setHours(new Date().getHours() - 1)).toISOString(),
    },
    {
      id: '2',
      userId: '1',
      type: NotificationType.FOLLOWUP_DUE,
      title: 'Follow-up Due Today',
      message: 'You have a call scheduled with Emma Wilson at 2:00 PM',
      source: NotificationSource.SYSTEM,
      priority: NotificationPriority.HIGH,
      status: NotificationStatus.UNREAD,
      entityId: '201',
      entityType: 'followup',
      createdAt: new Date(new Date().setHours(new Date().getHours() - 3)).toISOString(),
    },
    {
      id: '3',
      userId: '1',
      type: NotificationType.STATUS_CHANGE,
      title: 'Lead Status Changed',
      message: 'Sarah Johnson changed the status of lead Michael Brown from "New" to "Contacted"',
      source: NotificationSource.SYSTEM,
      priority: NotificationPriority.MEDIUM,
      status: NotificationStatus.UNREAD,
      entityId: '102',
      entityType: 'lead',
      createdAt: new Date(new Date().setHours(new Date().getHours() - 5)).toISOString(),
    },
    {
      id: '4',
      userId: '1',
      type: NotificationType.ASSIGNMENT,
      title: 'Lead Assigned to You',
      message: 'David Wilson assigned a new lead Raj Patel to you',
      source: NotificationSource.SYSTEM,
      priority: NotificationPriority.MEDIUM,
      status: NotificationStatus.READ,
      entityId: '103',
      entityType: 'lead',
      createdAt: new Date(new Date().setDate(new Date().getDate() - 1)).toISOString(),
      readAt: new Date(new Date().setHours(new Date().getHours() - 6)).toISOString(),
    },
    {
      id: '5',
      userId: '1',
      type: NotificationType.NEW_LEAD,
      title: 'New Lead from Website',
      message: 'Sophie Martin has inquired about Permanent Residency visa',
      source: NotificationSource.WEBSITE,
      priority: NotificationPriority.HIGH,
      status: NotificationStatus.READ,
      entityId: '104',
      entityType: 'lead',
      createdAt: new Date(new Date().setDate(new Date().getDate() - 1)).toISOString(),
      readAt: new Date(new Date().setHours(new Date().getHours() - 12)).toISOString(),
    },
    {
      id: '6',
      userId: '1',
      type: NotificationType.FOLLOWUP_DUE,
      title: 'Follow-up Overdue',
      message: 'You missed a WhatsApp follow-up with Akira Tanaka yesterday',
      source: NotificationSource.SYSTEM,
      priority: NotificationPriority.HIGH,
      status: NotificationStatus.UNREAD,
      entityId: '202',
      entityType: 'followup',
      createdAt: new Date(new Date().setDate(new Date().getDate() - 2)).toISOString(),
    },
    {
      id: '7',
      userId: '1',
      type: NotificationType.STATUS_CHANGE,
      title: 'Lead Status Changed',
      message: 'You changed the status of lead Ana Rodriguez from "Contacted" to "Interested"',
      source: NotificationSource.SYSTEM,
      priority: NotificationPriority.LOW,
      status: NotificationStatus.READ,
      entityId: '105',
      entityType: 'lead',
      createdAt: new Date(new Date().setDate(new Date().getDate() - 3)).toISOString(),
      readAt: new Date(new Date().setDate(new Date().getDate() - 3)).toISOString(),
    },
    {
      id: '8',
      userId: '1',
      type: NotificationType.NEW_LEAD,
      title: 'New Lead from Manual Entry',
      message: 'A new lead has been added manually for Business visa',
      source: NotificationSource.MANUAL,
      priority: NotificationPriority.MEDIUM,
      status: NotificationStatus.UNREAD,
      entityId: '106',
      entityType: 'lead',
      createdAt: new Date(new Date().setDate(new Date().getDate() - 4)).toISOString(),
    },
  ];
};

// Default notification preferences
export const getDefaultNotificationPreferences = () => {
  return {
    userId: '1',
    inApp: {
      enabled: true,
      newLeads: true,
      followUpReminders: true,
      statusChanges: true,
      leadAssignments: true,
    },
    email: {
      newLeads: true,
      followUpReminders: true,
      statusChanges: false,
      leadAssignments: true,
    },
    pushNotifications: false,
  };
}; 